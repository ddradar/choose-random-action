name: 'CI/CD'

on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '!**.md'
    tags:
      - 'v*'
  pull_request:
    paths:
      - '**'
      - '!**.md'

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 12

      # Cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Dependencies
        uses: actions/cache@v2.1.1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test
      - name: Report Code Coverage to codecov
        uses: codecov/codecov-action@v1
      - name: GitHub Actions Build Test
        id: act
        uses: ./
        with:
          contents: |
            foo
            bar
            baz
          weights: |
            10
            10
            10
      - name: Echo GitHub Actions outputs
        env:
          STEPS_CONTEXT: ${{ toJson(steps.act.outputs) }}
        run: echo $STEPS_CONTEXT
      - name: Drafts next Release notes
        if: (!contains(github.ref, 'tags/v'))
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    needs: [build]
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Get Version
        id: get_tag
        run: echo ::set-output name=version::${TAG_REF_NAME##*/}
        env:
          TAG_REF_NAME: ${{ github.ref }}
      - name: Release for GitHub Actions
        uses: technote-space/release-github-actions@v6
        with:
          BRANCH_NAME: releases/${MAJOR}
          CLEAN_TARGETS: .[!.]*,__tests__,coverage,lib,node_modules,src,*.js,*.ts,*.json,*.lock,_config.yml
          COMMIT_MESSAGE: 'build: release ${{ steps.get_tag.outputs.version }} via ${{ github.sha }}'
